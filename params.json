{"name":"jrmc-jqm-gizmo","tagline":"JQMGizmo is a rewrite of the JRiver MC web remote.It uses the JQueryMobile SPA framework, and leverage the JRMC services as a library.","body":"JQMGizmo\r\n========\r\n\r\nJQMGizmo is a rewrite of the JRiver MC web remote.\r\nIt uses the JQueryMobile SPA framework, and leverage the JRMC services as a library.\r\n\r\n![alt text](https://farm3.staticflickr.com/2889/13388336613_e6ee3ea0f0_z.jpg \"Now Playing!\")\r\n\r\n![alt text](https://farm4.staticflickr.com/3783/13388554414_1e656d066c_z.jpg \"Now Playing!\")\r\n\r\nlibrary.html => main library navigation\r\nlibraryfiles.html => leaf element navigation     (the main URL doesn't change but the template is different)\r\n\r\n\r\nthe current mode is stored as a 'mode' cookie where\r\n\r\n## Class: Mode\r\n* [Mode.Display] : the current zone label Playing to ...\r\n* [Mode.IsRemote) : whether it's playing in a zone\r\n* [Mode.IsPlay] : whether it's local playing (on the remote)\r\n\r\n## Class: ModeZone\r\nThe current playing zone\r\n\r\n* [ModeZone.ID] : the id\r\n* [ModeZone.Name] : the name\r\n\r\n* [ShowPlayingNow] : whether the playing now button should be shown on this screen\r\n* [ShowSearch] : whether the search button should be shown on this screen\r\n\r\n## CurrentLibraryItem\r\n* [CurrentLibraryItem.ShowPlay] : is it playable?\r\n* [CurrentLibraryItem.UseThumbnails] :\r\n\r\n\r\n\r\n## Count tokens\r\n* [ZoneCount]: the number of zones\r\n* [LibraryItemCount]: the number of items in a library view\r\n* [PlayingNowFileCount]: the number of files in Playing Now (in the active zone)\r\n* [LibraryFilesCount]: the number of items in a library files view\r\n\r\n## Tokens with no class (name only)\r\n* [LibraryLocation]: name of the current location when browsing\r\n* [ProgramFullName]: full name of the program (i.e. J. River Media Center)\r\n* [ProgramName]: name of the program (i.e. Media Center)\r\n* [ProgramVersion]: version of the program (i.e. 15.0.75)\r\n* [ActiveZoneName]: name of the current playback zone\r\n* [PlaybackStatus]: status of playback in the current zone (i.e. Playing, Stopped, etc.)\r\n* [LibraryServerLink]: URL to root of server\r\n* [Token]: access token used for authorization (helpful to append to URLs to avoid the need for authentication)\r\n\r\n## Class: Zone(index)\r\nThe index is the index (0-based) of the zone.\r\n* [Zone(x).Name]: name of the zone\r\n* [Zone(x).ID]: Identifier of the zone\r\n\r\n## Class: LibraryItem(index)\r\nWhen browsing, the individual items that make up a library view. For example, they could be an artist, album, keyword, etc.\r\n\r\n* [LibraryItem(x).Name]: name of item\r\n* [LibraryItem(x).ImageLink]: URL to a thumbnail (JPEG) for the item\r\n* [LibraryItem(x).IntoLink]: URL to navigate into this item\r\n* [LibraryItem(x).ShowPlay]: whether it makes sense to show play commands for this item (0 or 1)\r\n* [LibraryItem(x).PlayLink]: URL to play the library item on the server machine\r\n* [LibraryItem(x).AddLink]: URL to add the library item to Playing Now on the server machine\r\n* [LibraryItem(x).ShuffleLink]: URL to play (with shuffle) the library item on the server machine\r\n* [LibraryItem(x).M3ULink]: URL that will provide an M3U playlist of the files in the library item\r\n* [LibraryItem(x).ASXLink]: URL that will provide an ASX playlist of the files in the library item\r\n* [LibraryItem(x).MPLLink]: URL that will provide an MPL playlist of the files in the library item\r\n* [LibraryItem(x).WebPlayPlayLink]: URL that will play the library item files on the client\r\n* [LibraryItem(x).WebPlayShuffleLink]: URL that will play (with shuffle) the library item files on the client\r\n\r\n## Class: PlayingFile\r\nThe playing file. Uses same variable names as 'LibraryFile', so see below for variable names.\r\n\r\n## Class: PlayingNowFile(index)\r\nThe file at the specified index in Playing Now (zero based). Uses same variable names as 'LibraryFile', so see below for variable names.\r\n\r\n## Class: LibraryFile(index)\r\nThe file at the specified index in the current LibraryItem (zero based).\r\n\r\n* [LibraryFile(x).FileKey]: key of the file in the database (immutable, and safe to use between sessions)\r\n* [LibraryFile(x).ImageLink]: URL to a thumbnail (JPEG) of the file\r\n* [LibraryFile(x).Artist]: artist of the file\r\n* [LibraryFile(x).Name]: name of the file\r\n* [LibraryFile(x).PlayLink]: URL to play the file on the server\r\n* [LibraryFile(x).AddLink]: URL to add the file to Playing Now on the server\r\n* [LibraryFile(x).FileLink]: URL to provide the file to the client (on Android, provides MPL playlist pointing to file)\r\n\r\n## Class: Pagination\r\nTools and variables for splitting large lists into multiple pages.\r\n\r\n* [Pagination.StartIndex]: the first index of the current page (can be used in loops)\r\n* [Pagination.FinishIndex]: the last index of the current page (can be used in loops)\r\n* [Pagination.ShowControls(item count)]: whether a page should show pagination controls for the given item count\r\n* [Pagination.Controls(item count)]: links for the list of pages given an item count ( i.e. Previous 1 2 3 Next )\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}